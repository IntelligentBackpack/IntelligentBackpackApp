[versions]
accompanistPermissionsVersion = "0.30.1"
accompanistSystemuicontroller = "0.30.1"
activityCompose = "1.7.2"
barcodeScanning = "17.1.0"
cameraLifecycle = "1.3.0-beta01"
coreKtx = "1.10.1"
espressoCore = "3.5.1"
firebaseCrashlyticsGradle = "2.9.7"
googleServices = "4.3.15"
grpc-protobuf = "1.56.1"
guava = "31.1-android"
json = "20230618"
junit-junit = "4.13.2"
lifecycleRuntimeKtx = "2.6.1"
mockk = "1.13.3"
navigationCompose = "2.6.0"
orgJacocoCore = "0.8.10"
protobuf-compiler = "3.23.0"
junit = "1.1.5"
kotest = "5.6.2"
kotlin = "1.8.22"
gradle = "8.1.0"
kotlinxCoroutines = "1.7.2"
orchestrator = "1.4.2"
protobuf = "3.23.4"
retrofit = "2.9.0"
retrofitProtobufJsonConverter = "1.0.0"
roomKtx = "2.5.2"
runner = "1.5.2"
compose-compiler = "1.4.8"
appcompat = "1.6.1"
material = "1.9.0"
securityCrypto = "1.1.0-alpha06"

[libraries]
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissionsVersion" }
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanistSystemuicontroller" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraLifecycle" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraLifecycle" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "cameraLifecycle" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomKtx" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomKtx" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomKtx" }
androidx-security-crypto = { module = "androidx.security:security-crypto", version.ref = "securityCrypto" }
barcode-scanning = { module = "com.google.mlkit:barcode-scanning", version.ref = "barcodeScanning" }
build-gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
firebase-crashlytics-gradle = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebaseCrashlyticsGradle" }
google-services = { module = "com.google.gms:google-services", version.ref = "googleServices" }
gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc-protobuf" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc-protobuf" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "junit" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
json = { module = "org.json:json", version.ref = "json" }
junit = { module = "junit:junit", version.ref = "junit-junit" }
kotest-junit5-jvm = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-assertions-core-jvm = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
mockk-jvm = { module = "io.mockk:mockk-jvm", version.ref = "mockk" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
orchestrator = { module = "androidx.test:orchestrator", version.ref = "orchestrator" }
org-jacoco-core = { module = "org.jacoco:org.jacoco.core", version.ref = "orgJacocoCore" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobuf" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitProtobufJsonConverter = { module = "io.github.andreabrighi:RetrofitProtobufJsonConverter", version.ref = "retrofitProtobufJsonConverter" }
runner = { module = "androidx.test:runner", version.ref = "runner" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

[bundles]
kotlin-testing = [
    "kotest-junit5-jvm",
    "kotest-assertions-core",
    "kotest-assertions-core-jvm",
    "mockk",
    "mockk-jvm",
]

grpc = [
    "grpc-protobuf",
    "grpc-stub"
]

protobuf = [
    "protobuf-java",
    "protobuf-kotlin"
]

retrofit = [
    "retrofit",
    "retrofitProtobufJsonConverter"
]

coroutines = [
    "kotlinx-coroutines-android",
    "kotlinx-coroutines-core"
]

androidTest = [
    "espresso-core",
    "androidx-junit",
    "runner",
    "kotlinx-coroutines-test"
]

room = [
    "androidx-room-ktx",
    "androidx-room-runtime"
]

camera-view = [
    "androidx-camera-camera2",
    "androidx-camera-view",
    "androidx-camera-lifecycle",
    "accompanist-permissions"
]

barcode-scanning = [
    "barcode-scanning",
    "guava"
]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
dokka = "org.jetbrains.dokka:1.8.20"
android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
application = { id = "com.android.application", version.ref = "gradle" }
library = { id = "com.android.library", version.ref = "gradle" }
kotlin-qa = { id = "org.danilopianini.gradle-kotlin-qa", version = "0.47.1" }
taskTree = { id = "com.dorongold.task-tree", version = "2.1.1" }
protobuf-plugin = { id = "com.google.protobuf", version = "0.9.4" }
sem-ver = { id = "io.github.andreabrighi.android-git-sensitive-semantic-versioning-gradle-plugin", version = "1.0.2" }
