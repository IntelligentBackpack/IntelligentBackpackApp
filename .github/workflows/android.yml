name: Android CI

on:
  pull_request:
  push:
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: google services
        run: |
          echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      - name: Build with Gradle
        run: ./gradlew assembleDebug

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: google services
        run: |
          echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      - name: Unit test with Gradle
        run: ./gradlew test jacocoTestReport

  gen-api-latest:
    runs-on: ubuntu-latest
    needs:
      - build
    outputs:
      api: ${{ steps.api.outputs.list }}
    steps:
      - run: |
          ruby -e 'puts "list=#{(33..33).to_a.to_s}"' >> $GITHUB_OUTPUT
        id: api

  device-test-latest:
    runs-on: macos-latest
    needs: gen-api-latest
    strategy:
      matrix:
        api-level: ${{ fromJson(needs.gen-api-latest.outputs.api) }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: google services
        run: |
          echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          target: google_apis
          arch: x86_64
          script: echo "Generated AVD snapshot for caching."

      - name: Device test with Gradle
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          target: google_apis
          arch: x86_64
          script: ./gradlew connectedCheck
  release:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
      - device-test-latest
    if: github.ref == 'refs/heads/main'
    concurrency:
      group: release
      cancel-in-progress: false
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: create key
        run: echo "$SIGNING_KEY" | base64 -d > key.jks
        env:
          SIGNING_KEY: ${{secrets.SIGNING_KEY}}
      - name: google services
        run: |
          echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN}}
          ALIAS: ${{ secrets.ALIAS }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          npm install
          npx semantic-release

  documentation:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
      - device-test-latest
    if: github.ref == 'refs/heads/main'
    concurrency:
      group: docs
      cancel-in-progress: false
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: create key
        run: echo "$SIGNING_KEY" | base64 -d > key.jks
        env:
          SIGNING_KEY: ${{secrets.SIGNING_KEY}}
      - name: google services
        run: |
          echo $GOOGLE_SERVICES > app/google-services.json
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      - name: Create documentation
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN}}
        run: ./gradlew dokkaHtmlMultiModule
      - name: Deploy documentation
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./build/docs/partial
          branch: docs

  success:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
      - device-test-latest
      - release
      - documentation
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
